{"version":3,"file":"cache-storage.js","sourceRoot":"","sources":["../src/cache-storage.ts"],"names":[],"mappings":"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","sourcesContent":["import { Storage } from '@ionic/storage';\r\n\r\nexport interface StorageCacheItem {\r\n  key: string;\r\n  value: any;\r\n  expires: number;\r\n  type: string;\r\n  groupKey: string;\r\n}\r\n\r\nexport class CacheStorageService {\r\n  constructor(\r\n    private storage: Storage,\r\n    private keyPrefix: string\r\n  ) {\r\n  }\r\n\r\n  public ready() {\r\n    return this.storage.ready();\r\n  }\r\n\r\n  public async set(key: string, value: any) {\r\n    await this.ready();\r\n\r\n    return this.storage.set(this.buildKey(key), value);\r\n  }\r\n\r\n  public async remove(key: string) {\r\n    await this.ready();\r\n\r\n    return this.storage.remove(this.buildKey(key));\r\n  }\r\n\r\n  public async get(key: string) {\r\n    await this.ready();\r\n\r\n    let value = await this.storage.get(this.buildKey(key));\r\n    return !!value ? Object.assign({ key: key }, value) : null;\r\n  }\r\n\r\n  public async exists(key: string) {\r\n    await this.ready();\r\n\r\n    return !!(await this.storage.get(this.buildKey(key)));\r\n  }\r\n\r\n  public async all(): Promise<StorageCacheItem[]> {\r\n    await this.ready();\r\n\r\n    let items: StorageCacheItem[] = [];\r\n    await this.storage.forEach((val: any, key: string) => {\r\n      if (this.isCachedItem(key, val)) {\r\n        items.push(Object.assign({ key: this.debuildKey(key) }, val));\r\n      }\r\n    });\r\n\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @description Returns whether or not an object is a cached item.\r\n   * @return {boolean}\r\n   */\r\n  private isCachedItem(key: string, item: any): boolean {\r\n    return item && item.expires && item.type && key.startsWith(this.keyPrefix);\r\n  }\r\n\r\n  /**\r\n   * Makes sure that the key is prefixed properly\r\n   * @return {string}\r\n   */\r\n  private buildKey(key: string): string {\r\n    if (key.startsWith(this.keyPrefix)) {\r\n      return key;\r\n    }\r\n\r\n    return this.keyPrefix + key;\r\n  }\r\n\r\n  /**\r\n   * Makes sure that the key isn't prefixed\r\n   * @return {string}\r\n   */\r\n  private debuildKey(key: string): string {\r\n    if (key.startsWith(this.keyPrefix)) {\r\n      return key.substr(this.keyPrefix.length);\r\n    }\r\n\r\n    return key;\r\n  }\r\n}\r\n"]}